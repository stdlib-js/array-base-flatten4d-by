// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,o=Object.prototype,n=o.toString,a=o.__defineGetter__,l=o.__defineSetter__,f=o.__lookupGetter__,i=o.__lookupSetter__;function u(r,e,t,o,n){var a,l,f,i,u,c,_,p,s,b,y,d;if(l=e[3],f=e[2],i=e[1],u=e[0],a=[],t){for(c=0;c<l;c++)for(_=0;_<f;_++)for(p=0;p<i;p++)for(s=0;s<u;s++)a.push(o.call(n,r[s][p][_][c],[s,p,_,c],r));return a}for(s=0;s<u;s++)for(d=r[s],p=0;p<i;p++)for(y=d[p],_=0;_<f;_++)for(b=y[_],c=0;c<l;c++)a.push(o.call(n,b[c],[s,p,_,c],r));return a}function c(r,e,t,o,n,a,l,f){var i,u,c,_,p,s,b,y,d,v,g,j;if(i=e[3],u=e[2],c=e[1],_=e[0],j=a,t){for(p=0;p<i;p++)for(s=0;s<u;s++)for(b=0;b<c;b++)for(y=0;y<_;y++)o[j]=l.call(f,r[y][b][s][p],[y,b,s,p],r),j+=n;return o}for(y=0;y<_;y++)for(g=r[y],b=0;b<c;b++)for(v=g[b],s=0;s<u;s++)for(d=v[s],p=0;p<i;p++)o[j]=l.call(f,d[p],[y,b,s,p],r),j+=n;return o}e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var u,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(f.call(r,e)||i.call(r,e)?(u=r.__proto__,r.__proto__=o,delete r[e],r[e]=t.value,r.__proto__=u):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&l&&l.call(r,e,t.set),r},e(u,"assign",{configurable:!1,enumerable:!1,writable:!1,value:c});export{c as assign,u as default};
//# sourceMappingURL=mod.js.map
